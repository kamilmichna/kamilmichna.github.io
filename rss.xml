<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Kamil Michna]]></title><description><![CDATA[Mam na imię Kamil, jestem uczniem technikum informatycznego. W wolnym czasie zajmuje się tworzeniem stron internetowych,
    oraz programowaniem po stronie serwera (node.js). Mimo dość wąskiego zakresu sprecyzowanych zainteresowań
    staram się uczyć także innych technologi i języków. Mimo moich czysto technicznych zainteresowań
    próbuję także swoich sił w tworzeniu grafiki, oraz dbam o semantyczność i dostępność stron,
    a także dobre praktyki w kodzie po stronie serwera lub klienta. ]]></description><link>https://kamilmichna.github.io</link><generator>RSS for Node</generator><lastBuildDate>Tue, 22 Jan 2019 17:42:49 GMT</lastBuildDate><item><title><![CDATA[Poradnik Koa #3: Wstęp do template engines]]></title><description><![CDATA[Template engines w koa.js Co to template engine-y? W pewnym momencie odczujemy potrzebę pobrania pewnych danych na przykład z serwera, a…]]></description><link>https://kamilmichna.github.io/2019/1/koa_3/</link><guid isPermaLink="false">https://kamilmichna.github.io/2019/1/koa_3/</guid><pubDate>Sun, 06 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Template engines w koa.js&lt;/h1&gt;
&lt;h2&gt;Co to template engine-y?&lt;/h2&gt;
&lt;p&gt;W pewnym momencie odczujemy potrzebę pobrania pewnych danych na przykład z serwera, a następnie przekazanie go do route naszego serwera w &lt;strong&gt;koa&lt;/strong&gt;. W jaki sposób możemy to osiągnąć? Sposoby są co najmniej dwa. Jeden z nich, szczególnie przydatny przy szybko zmieniającej się treści strony jak na przykład przy projekcie który zawiera chat to strona która za pośrednictwem &lt;strong&gt;Javascriptu&lt;/strong&gt; łączy się z interfejsem serwera i z niego dynamicznie pobiera dane. Wspominałem już o &lt;strong&gt;Rest API&lt;/strong&gt;, i to jest właśnie jedno z jego głównych zastosowań. Dynamiczne pobieranie tresci z serwera jest co prawda bardzo przydatne, ale nie zawsze potrzebne. Na przykład w przypadku prostego bloga takiego jak ten (mimo że ten właśnie oparty jest o tzw &lt;strong&gt;static site generator&lt;/strong&gt;, będzie o tym inny wpis) nie potrzebujemy stałego połączenia z naszym backendem, wystarczy przecież pobranie listy postów i wyświetlenie jej gdy przeglądarka pobiera stronę główną. Do takich zastosowań warto użyć właśnie &lt;strong&gt;template engines&lt;/strong&gt;, o których jest ten post.&lt;/p&gt;
&lt;h2&gt;Jak działa template engine?&lt;/h2&gt;
&lt;p&gt;Zasada działania jest bardzo prosta. Jest to właściwie taki &lt;strong&gt;&quot;html na sterydach&quot;&lt;/strong&gt;. Co to oznacza? Nasze strony zapisujemy w jednym z odpowiednich języków, a serwer podczas zapytania przetwarza nasz szablon i zamienia na zwykły plik html.&lt;/p&gt;
&lt;h3&gt;Więc co jest w tym takiego super?&lt;/h3&gt;
&lt;p&gt;Główną zaletą używania &lt;strong&gt;template engines&lt;/strong&gt; jest możliwość użycia czegoś w rodzaju zmiennych - w odpowiednim miejscu w kodzie naszej strony mówimy na przykład &lt;strong&gt;&quot;Do tego nagłówka wstaw zmienną title&quot;&lt;/strong&gt; (której wartość pobierana jest przy przetwarzaniu szablonu) a nasz backend, w tym wypadku &lt;strong&gt;serwer w koa&lt;/strong&gt; w puste miejsce wstawi żądaną wartość.
Mimo iż brzmi to nieco enigmatycznie, niebawem powinno się rozjaśnić.&lt;/p&gt;
&lt;h3&gt;Jaki template engine wybrać?&lt;/h3&gt;
&lt;p&gt;W świecie &lt;strong&gt;Jsa&lt;/strong&gt; istnieje zatrzęsienie bibliotek, frameworków i różnych pomniejszych rozwiązań do wyboru. Podobnie jest w przypadku &lt;strong&gt;template engines&lt;/strong&gt; - mamy ich do wyboru całkiem sporo. Najpopularniejsze z nich to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pug&lt;/li&gt;
&lt;li&gt;Underscore&lt;/li&gt;
&lt;li&gt;EJS&lt;/li&gt;
&lt;li&gt;Handlebars&lt;/li&gt;
&lt;li&gt;Mustache
Warto przy wyborze kierować się głównie naszym gustem - mają bardzo zblizone możliwości, a warto zadbać aby wybrać ten z którym będzie nam się przyjemnie pracować.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;W następnym poście zaczniemy pracę z template engine.&lt;/h4&gt;
&lt;h3&gt;Dzięki za uwagę ;)&lt;/h3&gt;</content:encoded></item><item><title><![CDATA[Poradnik Koa #2.5: next]]></title><description><![CDATA[Next w koa(); W poprzednim wpisie stworzyliśmy sobie prosty routing w koa, dzisiaj natomiast w niemal  telegraficznym  skrócie przyjrzymy…]]></description><link>https://kamilmichna.github.io/2019/1/koa_2_5_next/</link><guid isPermaLink="false">https://kamilmichna.github.io/2019/1/koa_2_5_next/</guid><pubDate>Sat, 05 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Next w koa();&lt;/h1&gt;
&lt;p&gt;W poprzednim wpisie stworzyliśmy sobie prosty routing w koa, dzisiaj natomiast w niemal &lt;strong&gt;telegraficznym&lt;/strong&gt; skrócie przyjrzymy się metodzie &lt;strong&gt;next()&lt;/strong&gt; którą udostępnia nam &lt;strong&gt;koa&lt;/strong&gt; oraz jego &quot;starszy brat&quot; czyli &lt;strong&gt;Express&lt;/strong&gt;. &lt;/p&gt;
&lt;h2&gt;Jak działa next?&lt;/h2&gt;
&lt;p&gt;Jeżeli w danym routcie wywołamy metodę &lt;strong&gt;next()&lt;/strong&gt;, zostanie natychmiastowo wykonany kolejna metoda przypisana do routa, który spełnia wymogi określone w nim samym. Wiem brzmi to bardzo skomplikowanie - warto jednak zobaczyć jego działanie w praktyce, a stanie się to o wiele prostsze. Skopiujmy zatem kod który napisaliśmy w ostatnim poście:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Koa &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Router &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa-router&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Koa&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; router &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

   app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;allowedMethods&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;next&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;this is index page&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    
    app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;usunęliśmy jednak route dla &lt;code class=&quot;language-text&quot;&gt;/hello&lt;/code&gt; - nie będzie nam potrzebny.&lt;/p&gt;
&lt;h2&gt;Co chcemy zrobić?&lt;/h2&gt;
&lt;p&gt;Stworzymy sobie prosty skrypt, który pozwoli nam pobrać parametr z &lt;strong&gt;url&lt;/strong&gt; i w zależności od jego długośći wyświetlić odpowiedni komunikat. Dla przykładu, jeżeli ciąg znaków będzie dłuższy niż 10, serwer &lt;strong&gt;koa&lt;/strong&gt; zwróci komunikat &quot;długi string&quot; natomiast jeżeli będzie krótszy, zwróci &quot;krótki string&quot;;&lt;/p&gt;
&lt;h3&gt;Do dzieła!&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Koa &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Router &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa-router&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Koa&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; router &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;allowedMethods&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/:int&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;next&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;params&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;


app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jeżeli teraz przejdziesz pod `localhost:3000/123456&apos; w konsoli twojego serwera powinna ukazać się liczba - a właściwie napis &lt;strong&gt;123456&lt;/strong&gt;. Oznacza to że pobraliśmy z url strony właśnie potrzebny nam string. Teraz sprawdźmy czy jest on większy czy mniejszy:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Koa &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Router &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa-router&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Koa&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; router &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;allowedMethods&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/:int&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;next&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;params&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mniejszy&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/:int&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;next&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;większy&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Gotowe&lt;/strong&gt;. Teraz jeżeli po &lt;strong&gt;localhost:3000/&lt;/strong&gt; wpiszesz dowolny ciąg znaków nasz skrypt sprawdzi czy jest on dłuższy niż 10, jeżeli tak wyświetli odpowiedni komunikat.&lt;/p&gt;
&lt;h2&gt;Okej ale jak to działa?&lt;/h2&gt;
&lt;h3&gt;Weźmy pod lupę pierwszego routa:&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/:int&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;next&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;params&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mniejszy&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;na początku mamy prostą konstrukcję &lt;strong&gt;if else&lt;/strong&gt; która zwyczajnie sprawdza nam czy ciąg jest dluższy czy krótszy niż 10 znaków. Jeżeli długość ciągu jest mniejsza lub równa wymienionej wcześniej liczbie, serwer od razu zwraca &quot;mniejszy&quot;, jeżeli natomiast jest większy wywoła &lt;strong&gt;next()&lt;/strong&gt; - i tutaj zaczyna się cała magia.&lt;/p&gt;
&lt;h3&gt;Jak właściwie działa next()?&lt;/h3&gt;
&lt;p&gt;Wywołanie next() przeniesie nas od razu do kolejnego routa którego warunki spełnia nasz aktualny url - w tym przypadku:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/:int&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;next&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;większy&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oznacza to ze w przypadku gdy ciąg znaków jest dłuższy niż 10 pierwszy route przeniesie nas za pomocą &lt;strong&gt;next&lt;/strong&gt; do drugiego routa. Może ten przykład nie jest zbyt praktyczny - &lt;strong&gt;next&lt;/strong&gt; może mieć w końcu z goła inne zastosowanie - jednak myślę że może pomóc zrozumieć jego działanie.&lt;/p&gt;
&lt;h3&gt;Dzięki za uwagę ;)&lt;/h3&gt;</content:encoded></item><item><title><![CDATA[Poradnik Koa #2: routing]]></title><description><![CDATA[Routing w Koa Dzisiaj zajmiemy się czymś bardzo ważnym dla praktycznie każdej aplikacji internetowej -  routingiem . Zanim jednak…]]></description><link>https://kamilmichna.github.io/2019/1/koa_2/</link><guid isPermaLink="false">https://kamilmichna.github.io/2019/1/koa_2/</guid><pubDate>Fri, 04 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Routing w Koa&lt;/h1&gt;
&lt;p&gt;Dzisiaj zajmiemy się czymś bardzo ważnym dla praktycznie każdej aplikacji internetowej - &lt;strong&gt;routingiem&lt;/strong&gt;. Zanim jednak przejdziemy do kodu, musimy ustalić, czym właściwie ten routing jest.&lt;/p&gt;
&lt;h2&gt;Czym jest Routing?&lt;/h2&gt;
&lt;p&gt;Dzięki &lt;strong&gt;routingowi&lt;/strong&gt; możemy w prosty sposób ustalić jak nasza aplikacja reagować będzie na zapytania do niej kierowane - jednym słowem możemy ściśle ustalić sposób zachowania naszej aplikacji w zależności od typu zapytania, oraz ścieżki wskazanej przez zapytanie. Pozwala nam to w znacznie prostszy sposób komunikować się z frontem aplikacji - chociażby poprzez &lt;strong&gt;REST API&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;Routing w Koa - jak zacząć?&lt;/h2&gt;
&lt;p&gt;Budowa &lt;strong&gt;Koa&lt;/strong&gt; trochę różni się od budowy innego frameworka - &lt;strong&gt;Express.js&lt;/strong&gt;. W &lt;strong&gt;Expressie&lt;/strong&gt; na starcie mieliśmy moduł pozwalający na obsługę routingu, natomiast w &lt;strong&gt;Koa&lt;/strong&gt; musimy sami go doinstalować. Potrzebny moduł nosi nazwę &lt;strong&gt;koa-router&lt;/strong&gt; i podobnie jak w przypadku &lt;strong&gt;koa&lt;/strong&gt; doinstalujemy go za pomocą polecenia
&lt;code class=&quot;language-text&quot;&gt;npm i koa-router&lt;/code&gt; (instalujemy oczywiście w folderze z zainstalowanym koa)&lt;/p&gt;
&lt;h2&gt;Używamy routera&lt;/h2&gt;
&lt;p&gt;Zaczynamy z kodem z poprzedniego wpisu: &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Koa &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Koa&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt; ctx &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Hello World&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;aby skorzystać z &lt;strong&gt;routera&lt;/strong&gt;, musimy &quot;pobrać&quot; go do naszej aplikacji, przypiszemy go do stałej &lt;strong&gt;Router&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Koa &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Router &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa-router&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Koa&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt; ctx &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
         ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Hello World&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Następnie wprowadzimy kilka istotnych zmian w kodzie:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Koa &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Router &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa-router&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Koa&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; router &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

   app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;allowedMethods&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;next&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;this is index page&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Po pierwsze, podobnie jak w przypadku &lt;strong&gt;app&lt;/strong&gt; tworzymy stałą router, która staje się instancją klasy &lt;strong&gt;Router&lt;/strong&gt;. Brzmi to skomplikowanie, ale można to sobie bardzo prosto wyobrazić - z &quot;foremki&quot; jaką jest &lt;strong&gt;Router&lt;/strong&gt; powstaje &lt;strong&gt;router&lt;/strong&gt;, czyli jego mała , fizyczna instacja skrojona idealnie na potrzeby naszej aplikacji:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;     &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; router &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Następnie dwukrotnie korzystamy ze składni &lt;strong&gt;app.use&lt;/strong&gt;:
&lt;code class=&quot;language-text&quot;&gt;app.use(router.routes())&lt;/code&gt; - tutaj mówimy naszej aplikacji aby przy użyciu funkcji &lt;strong&gt;routes&lt;/strong&gt; pobrała od naszego routera wszystkie potrzebne informacje i użyła ich w razie jakiegokolwiek zapytania. To właśnie ta funkcja łączy nasz router (czyli tzw middleware) z aplikacją&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;app.use(router.allowedMethods()))&lt;/code&gt; - ta linia nie jest niezbędna do podstawowego działania, ale pozwala na obsługę zapytania OPTIONS - warto więc ją dodać, nawet jeżeli nie do końca wiemy jeszcze do czego dokładnie służy&lt;/p&gt;
&lt;h2&gt;Zabawa routingiem&lt;/h2&gt;
&lt;p&gt;Po wstępnej konfiguracji przyszedł czas na właściwie zastosowanie routera:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;next&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;this is index page&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Po wejściu w przeglądarce pod adres &lt;a href=&quot;http://localhost:3000/&quot;&gt;http://localhost:3000/&lt;/a&gt; naszym oczom powinno ukazać się &quot;this is index page&quot;. Nic w tym jednak niezwykłego - podobny efekt moglibyśmy osiągnąć używając kodu z poprzedniej częśći, podmieniając jedynie &apos;hello&apos; na wybrany przez nas tekst. &lt;/p&gt;
&lt;h2&gt;Więcej routingu&lt;/h2&gt;
&lt;p&gt;Dodajmy sobie do naszego skryptu jeszcze jeden route: &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Koa &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Router &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa-router&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Koa&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; router &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

   app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;allowedMethods&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;next&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;this is index page&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

     router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/hello&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;next&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;this is hello page&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Teraz po wejściu na &lt;a href=&quot;http://localhost:3000/hello&quot;&gt;http://localhost:3000/hello&lt;/a&gt; nasz serwer wykryje odpowiednią ścieżkę i zamiast &quot;this is index page&quot; zwróci &quot;this is hello page&quot;&lt;/p&gt;
&lt;h2&gt;Fajne, ale jak to działa?&lt;/h2&gt;
&lt;p&gt;Rozłóżmy sobie routing na części pierwsze. Jako przykładem posłużymy się tym routem:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;      router&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/hello&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;next&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;this is hello page&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;router.get&lt;/code&gt; informuje dany route aby regował na zapytanie o danej metodzie - w tym przypadku &lt;strong&gt;get&lt;/strong&gt;. Oprócz &lt;strong&gt;get&lt;/strong&gt; możemy użyć także innych słów kluczowych, odpowiadających metodom zapytań &lt;strong&gt;http&lt;/strong&gt; używanych do stworzenia &lt;strong&gt;REST API&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;post (odpowiada za obsługę zapytania &lt;code class=&quot;language-text&quot;&gt;post&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;put  (odpowiada za obsługę zapytania &lt;code class=&quot;language-text&quot;&gt;put&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;del (odpowiada za obsługę zapytania &lt;code class=&quot;language-text&quot;&gt;delete&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;all (obsługuje wszystkie powyższe typy zapytań )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pierwszym parametrem funkcji jest &lt;strong&gt;relatywna ścieżka naszego zapytania&lt;/strong&gt;. Przykładowo &lt;code class=&quot;language-text&quot;&gt;/hello&lt;/code&gt; w naszej aplikacji nasłuchuje zapytań tylko pod adresem &lt;a href=&quot;http://localhost:3000/hello&quot;&gt;http://localhost:3000/hello&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Następny parametr to funkcja, opisująca zachowanie naszego routa: &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;next&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;this is hello page&apos;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Korzystamy tutaj z tzw &lt;strong&gt;arrow function&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;O parametrze &lt;strong&gt;next&lt;/strong&gt; opowiem w innym wpisie, natomiast ctx to  &lt;strong&gt;kontekst&lt;/strong&gt;, czyli obiekt który zawiera w sobie znane z Expressa &lt;strong&gt;res&lt;/strong&gt; i &lt;strong&gt;req&lt;/strong&gt; - obiekty zapytań. Tutaj można dowiedzieć się o nim więcej: &lt;a href=&quot;https://github.com/koajs/koa/blob/master/docs/api/context.md&quot;&gt;https://github.com/koajs/koa/blob/master/docs/api/context.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ctx.body&lt;/strong&gt; (a dokładniej ctx.response.body) to treść która zostanie wysłana do klienta który wykonał zapytanie które spełnia warunki naszego routa.&lt;/p&gt;
&lt;h3&gt;Dzięki za uwagę ;)&lt;/h3&gt;</content:encoded></item><item><title><![CDATA[Poradnik Koa #1: Instalacja i Hello-World]]></title><description><![CDATA[Witaj w pierwszej części poradnika koa. Zanim przystąpimy do używania frameworka musimy go zainstalować Instalacja potrzebnych pakietów Koa…]]></description><link>https://kamilmichna.github.io/2019/1/koa_1/</link><guid isPermaLink="false">https://kamilmichna.github.io/2019/1/koa_1/</guid><pubDate>Thu, 03 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Witaj w pierwszej części poradnika koa.&lt;/h1&gt;
&lt;p&gt;Zanim przystąpimy do używania frameworka musimy go zainstalować&lt;/p&gt;
&lt;h2&gt;Instalacja potrzebnych pakietów&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Koa&lt;/strong&gt; do działania potrzebuje node.js, natomiast do poprawnej i prostej instalacji frameworka potrzebujemy Node Package Managera, czyli &lt;strong&gt;npm&lt;/strong&gt;. Sprawdzmy więc,czy je posiadamy&lt;/p&gt;
&lt;h3&gt;Sprawdzenie wersji node&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;    node -v&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jeżeli posiadasz poprawnie zainstalowane środowisko &lt;strong&gt;node.js&lt;/strong&gt;, komenda powinna zwrócić wersję node, w moim przypadku: &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;    v10.6.0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Następnym krokiem jest sprawdzenie, czy posiadamy &lt;strong&gt;npm&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;    npm -v&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;W moim przypadku komenda ta zwraca:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;   6.3.0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oznacza to że zarówno &lt;strong&gt;node&lt;/strong&gt; i &lt;strong&gt;npm&lt;/strong&gt; jest poprawnie zainstalowane i gotowe do użycia&lt;/p&gt;
&lt;h3&gt;Stworzenie środowiska dla koa&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Krok pierwszy:&lt;/strong&gt; stwórz nowy folder dla aplikacji z użyciem koa (pamiętaj aby nie nazywał sie po prostu koa - nie mozna zainstalować modułu w folderze o tej samej nazwie)
&lt;strong&gt;Krok drugi:&lt;/strong&gt; otwórz ten folder w terminalu, wierszu poleceń lub PowerShell  (w przypadku windows)
Następnie należy użyć polecenia &lt;code class=&quot;language-text&quot;&gt;npm init&lt;/code&gt; które stworzy w folderze plik &lt;strong&gt;package.json&lt;/strong&gt; oraz pozwoli na instalację modułów npm (czyli naszego &lt;strong&gt;koa&lt;/strong&gt;). Wypełnienie wszystkich informacji nie jest konieczne.&lt;/p&gt;
&lt;h3&gt;Instalacja Koa&lt;/h3&gt;
&lt;p&gt;Jeżeli wszystkie poprzednie kroki zostały spełnione, polecenie &lt;code class=&quot;language-text&quot;&gt;npm i koa&lt;/code&gt; zainstaluje &lt;strong&gt;framework koa&lt;/strong&gt; w naszym folderze.&lt;/p&gt;
&lt;h2&gt;Pierwsza aplikacja&lt;/h2&gt;
&lt;p&gt;W naszym folderze tworzymy plik javascript o dowolnej nazwie, ja nazwę go &lt;strong&gt;start.js&lt;/strong&gt;. Następnie wklejamy do niego kod:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Koa &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Koa&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; ctx &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Hello World&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Aby uruchomić teraz nasz skrypt, używamy polecenia: &lt;code class=&quot;language-text&quot;&gt;node start.js&lt;/code&gt;
Następnie wejdź w przeglądarce pod adres &lt;strong&gt;&lt;a href=&quot;http://localhost:3000/&quot;&gt;http://localhost:3000/&lt;/a&gt;&lt;/strong&gt;, nasz skrypt wyświetla &lt;strong&gt;Hello Wordl&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;No okej, ale jak to działa? Przejrzyjmy kod linia po linii&lt;/h3&gt;
&lt;p&gt;Aby móc użyć koa w naszym pliku, importujemy go za pomocą require i przypisujemy do stałej  &lt;strong&gt;Koa&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Koa &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;koa&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Następnie tworzymy instancję klasy &lt;strong&gt;Koa&lt;/strong&gt;, i przypisujemy do kolejnej stałej, tym razem &lt;strong&gt;app&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Koa&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Następna część jest odrobine bardziej skomplikowana:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; ctx &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Hello World&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;app.use()&lt;/strong&gt; dodaje do aplikacji funkcję podaną jako argument, dzięki temu możemy chociażby wysyłać czy pobierać pliki na serwerze, dokładniej omówimy to jednak w następnej części poradnika. Bardziej interesująca dla nas jest natomias funkcja znajdująca się wewnątrz - wyciągnijmy ją więc z &lt;strong&gt;app.use&lt;/strong&gt; i omówmy:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; ctx &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Hello World&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jest to tak zwana &lt;strong&gt;funkcja strzałkowa&lt;/strong&gt; - jeżeli jest ci obca to odsyłam do MDN: &lt;a href=&quot;https://developer.mozilla.org/pl/docs/Web/JavaScript/Reference/Functions/Funkcje_strzalkowe&quot;&gt;link&lt;/a&gt;. Widzimy tutaj również &lt;strong&gt;async&lt;/strong&gt; - jak wspomniałem koa w dużej mierze wykorzystuje asynchroniczność oraz składnię &lt;strong&gt;async/await&lt;/strong&gt; jednak w tym przykładzie nie ma to żadnego znaczenia.&lt;/p&gt;
&lt;p&gt;Jako parametr przyjmuje argument &lt;strong&gt;ctx&lt;/strong&gt;. Jest to skrót od &lt;strong&gt;context&lt;/strong&gt;, oraz zawiera w sobie zarówno &lt;strong&gt;req&lt;/strong&gt; jak i &lt;strong&gt;res&lt;/strong&gt; (request i response) znane z node.
Oznacza to że zarówno przy pobieraniu danych z zapytania jak i wysyłaniu naszych do użytkownika będziemy korzystać właśnie z &lt;strong&gt;ctx&lt;/strong&gt;. Przy wysłaniu odpowiedzi musimy skorzystać z obiektu ctx.response, czyli obiektu który zawiera ogół informacji o odpowiedzi z serwera. W tym przykładzie interesuje nas konkretnie &lt;strong&gt;body&lt;/strong&gt;, do którego można dostać się zarówno poprzez &lt;code class=&quot;language-text&quot;&gt;ctx.body&lt;/code&gt; jak i &lt;code class=&quot;language-text&quot;&gt;ctx.response.body&lt;/code&gt;. Jeżeli mi nie wierzysz - po prostu podmień odpowiednie fragmenty i sprawdz czy kod nadal działa (gwarantuję że tak).&lt;/p&gt;
&lt;p&gt;Ostatnia część pliku to &lt;code class=&quot;language-text&quot;&gt;app.listen(3000);&lt;/code&gt;. Mówi on aplikacji, aby nasłuchiwała pod adresem &lt;a href=&quot;http://localhost:port/&quot;&gt;http://localhost:port/&lt;/a&gt;, gdzie &lt;strong&gt;port&lt;/strong&gt; podajemy właśnie wewnątrz funkcji listen.&lt;/p&gt;
&lt;h3&gt;Dzięki za uwagę ;)&lt;/h3&gt;</content:encoded></item><item><title><![CDATA[Poradnik Koa #0: Czym jest Koa?]]></title><description><![CDATA[Wstęp Obserwując bardzo małą ilość poradników dotyczących używania frameworka Koa, zwłaszcza w języku polskim postanowiłem napisać…]]></description><link>https://kamilmichna.github.io/2019/1/koa_0/</link><guid isPermaLink="false">https://kamilmichna.github.io/2019/1/koa_0/</guid><pubDate>Wed, 02 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Wstęp&lt;/h1&gt;
&lt;p&gt;Obserwując bardzo małą ilość poradników dotyczących używania frameworka Koa, zwłaszcza w języku polskim postanowiłem napisać przewodnik który wytłumaczy podstawy Koa, oraz ułatwi start osobom które nigdy z niego nie korzystały.&lt;/p&gt;
&lt;h2&gt;Czym właściwie jest Koa?&lt;/h2&gt;
&lt;p&gt;Koa to &lt;strong&gt;framework webowy&lt;/strong&gt; dla &lt;strong&gt;Node&lt;/strong&gt; stworzony przez zespół odpowiedzialny za chyba najpopularniejsze obecnie rozwiązanie tego typu: &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt;, można więc uznać że Koa to jego młodszy brat :). Głównymi cechami odróżniającymi &lt;strong&gt;Koa&lt;/strong&gt; od &lt;strong&gt;Expressa&lt;/strong&gt; jest jego &lt;strong&gt;asynchroniczność&lt;/strong&gt; oraz to, że &lt;strong&gt;Koa&lt;/strong&gt; dostajemy bez middleware&apos;u - musimy sami doinstalować sobie tylko to, co jest nam potrzebne.&lt;/p&gt;
&lt;h4&gt;Link do koa: &lt;a href=&quot;https://koajs.com/&quot;&gt;Koa.js&lt;/a&gt;&lt;/h4&gt;
&lt;h3&gt;Dzięki za uwagę ;)&lt;/h3&gt;</content:encoded></item><item><title><![CDATA[Witajcie!]]></title><description><![CDATA[Witaj na moim blogu! Mam na imię Kamil i jestem początkującym fullstack developerem.
Założyłem tego bloga aby rozwinąć swoje umiejętności, i…]]></description><link>https://kamilmichna.github.io/2019/1/hello/</link><guid isPermaLink="false">https://kamilmichna.github.io/2019/1/hello/</guid><pubDate>Tue, 01 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Witaj na moim blogu!&lt;/h1&gt;
&lt;p&gt;Mam na imię Kamil i jestem początkującym fullstack developerem.
Założyłem tego bloga aby rozwinąć swoje umiejętności, i pomóc osobom początkującym w nauce programowania. Będę tutaj zamieszczał krótkie poradniki, listy ciekawych bibliotek, czasami ciekawe treści niezwiązane z technologiami webowymi i wiele więcej!&lt;/p&gt;
&lt;h3&gt;Dzięki za uwagę ;)&lt;/h3&gt;</content:encoded></item></channel></rss>