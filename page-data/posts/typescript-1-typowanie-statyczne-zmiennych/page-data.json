{"componentChunkName":"component---src-templates-post-js","path":"/posts/typescript-1-typowanie-statyczne-zmiennych","webpackCompilationHash":"9523a0af89d766d1442a","result":{"data":{"allWordpressPost":{"edges":[{"node":{"date":"30, Mar, 2020","title":"Typescript #1 &#8211; typowanie statyczne&nbsp;zmiennych","content":"\n<p>JednÄ… z gÅ‚Ã³wnych zalet, o ktÃ³rÄ… de facto oparty jest caÅ‚y&nbsp;<strong>TypeScript</strong>&nbsp;jest typowanie statyczne. Zapewne czÄ™Å›Ä‡ z was spotkaÅ‚a siÄ™ z nim w innych jÄ™zykach programowania, jednak warto przyjrzeÄ‡ mu siÄ™ bliÅ¼ej. Istnieje kilka typÃ³w zmiennych. Jak je zadeklarowaÄ‡? Odpowiem na to pytanie poniÅ¼ej!</p>\n\n\n\n<h2><a href=\"https://github.com/kamilmichna/kamilmichna.github.io/blob/stable/src/posts/2019/6/typescript-1.md#boolean\"></a>Boolean</h2>\n\n\n\n<pre class=\"wp-block-preformatted\">let booleanVariable: bool;\nbooleanVariable = true; //OK\nbooleanVariable = false; //OK\nbooleanVariable = 123; //Error</pre>\n\n\n\n<p>Co tutaj siÄ™ dziej? Za pomocÄ… : typ_zmiennej` okreÅ›lamy Å¼e dana zmienna moÅ¼e mieÄ‡ wartoÅ›Ä‡ tylko danego typu, w tym przypadku&nbsp;<strong>true</strong>&nbsp;lub&nbsp;<strong>false</strong>. PrÃ³ba przypisania na przykÅ‚ad&nbsp;<strong>stringa</strong>&nbsp;zwrÃ³ci bÅ‚Ä…d. I to w zasadzie gÅ‚Ã³wne zaÅ‚oÅ¼enie&nbsp;<strong>TypeScripta</strong>&nbsp;i coÅ› co stanowi jego podstawÄ™. Jakie typy danych jeszcze istniejÄ…? SprawdÅºmy!</p>\n\n\n\n<h2><a href=\"https://github.com/kamilmichna/kamilmichna.github.io/blob/stable/src/posts/2019/6/typescript-1.md#number\"></a>Number</h2>\n\n\n\n<p>Typ number dziaÅ‚a identycznie jak w&nbsp;<strong>JavaScript</strong>&nbsp;&#8211; sÄ… to wszystkie liczby typu&nbsp;<strong>float</strong>. Zdefiniowanie go jest dziecinnie proste:</p>\n\n\n\n<pre class=\"wp-block-preformatted\">let numberVariable: number;\nnumberVariable = 100; //OK\nnumberVariable = true; //Error\nnumberVariable = \"100\"; //Error</pre>\n\n\n\n<h2><a href=\"https://github.com/kamilmichna/kamilmichna.github.io/blob/stable/src/posts/2019/6/typescript-1.md#string\"></a>String</h2>\n\n\n\n<p>DziaÅ‚a identycznie jak string w&nbsp;<strong>JavaScript</strong>. Jest to ciÄ…g znakÃ³w ograniczony znakiem&nbsp;<code>'</code>&nbsp;lub&nbsp;<code>\"</code>.</p>\n\n\n\n<pre class=\"wp-block-preformatted\">let stringVariable: string;\nstringVariable = \"hello; //OK\nstringVariable = true; //Error\nstringVariable = 10; //Error</pre>\n\n\n\n<p>Dozwolone sÄ… takÅ¼e tzw.&nbsp;<strong>template stringi</strong></p>\n\n\n\n<pre class=\"wp-block-preformatted\">\tstringVariable = `wynik dodawania to ${2+2}`; //OK</pre>\n\n\n\n<h2><a href=\"https://github.com/kamilmichna/kamilmichna.github.io/blob/stable/src/posts/2019/6/typescript-1.md#tablice\"></a>Tablice</h2>\n\n\n\n<p><strong>TypeScript</strong>&nbsp;pozwala nam takÅ¼e na pracÄ™ z tablicami. Najpierw podobnie jak wczeÅ›niej definiujemy rodzaj danych w tablicy, a nastÄ™pnie dodajemy&nbsp;<strong>[]</strong>. PrzykÅ‚ady:</p>\n\n\n\n<pre class=\"wp-block-preformatted\">let arrayOfNumbers: number[];\narrayOfNumbers = [1,2,3,4,5] // OK\narrayOfNumbers = [\"jeden\",\"dwa\",\"trzy\"] // Error\n\nlet arrayOfStrings: string[];\narrayofStrings = [\"jeden\",\"dwa\",\"trzy\"] //OK\narrayOfStrings = [1,2,3] // Error</pre>\n\n\n\n<p>MoÅ¼emy takÅ¼e uÅ¼yÄ‡ tzw&nbsp;<strong>generic array type</strong>, w nastÄ™pujÄ…cy sposÃ³b:</p>\n\n\n\n<pre class=\"wp-block-preformatted\">let arrayOfNumbers: Array&lt;number&gt;;\narrayOfNumbers = [1,2,3,4,5] // OK\narrayOfNumbers = [\"jeden\",\"dwa\",\"trzy\"] // Error</pre>\n\n\n\n<h2><a href=\"https://github.com/kamilmichna/kamilmichna.github.io/blob/stable/src/posts/2019/6/typescript-1.md#tuple-krotka\"></a>Tuple (krotka)</h2>\n\n\n\n<p>Tuple to uporzÄ…dkowany ciÄ…g danych, przypomina tablicÄ™ o staÅ‚ej, okreÅ›lonej dÅ‚ugoÅ›ci. Jak jÄ… zdefiniowaÄ‡ w&nbsp;<strong>TypeScript?</strong>&nbsp;to proste!</p>\n\n\n\n<pre class=\"wp-block-preformatted\">let tuple: [number, string];\ntuple = [100,\"hello\"] // OK\ntuple = [\"hello\",100] // Error</pre>\n\n\n\n<h2><a href=\"https://github.com/kamilmichna/kamilmichna.github.io/blob/stable/src/posts/2019/6/typescript-1.md#any\"></a>Any</h2>\n\n\n\n<p>Typ any oznacza Å¼e do danej zmiennej moÅ¼e zostaÄ‡ przypisana wartoÅ›Ä‡ dowolnego typu.</p>\n\n\n\n<pre class=\"wp-block-preformatted\">let anyVariable: any;\nanyVariable = 123; // OK\nanyVariable = \"12345\"; // OK\nanyVariable = false // OK</pre>\n\n\n\n<p>Mam nadziejÄ™ Å¼e powyÅ¼szy post przybliÅ¼yÅ‚ Ci typy zmiennych w&nbsp;<strong>TypeScript</strong>! Po wiÄ™cej wiedzy zajÅ¼yj&nbsp;<a href=\"https://www.typescriptlang.org/docs/handbook/basic-types.html\">do dokumentacji</a></p>\n\n\n\n<h3><a href=\"https://github.com/kamilmichna/kamilmichna.github.io/blob/stable/src/posts/2019/6/typescript-1.md#dzi%C4%99ki-za-uwag%C4%99-kamil-michna-\"></a>DziÄ™ki za uwagÄ™, Kamil Michna ğŸ˜‰</h3>\n","jetpack_featured_media_url":"","categories":[{"name":"Uncategorized"}]}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"typescript-1-typowanie-statyczne-zmiennych"}}}