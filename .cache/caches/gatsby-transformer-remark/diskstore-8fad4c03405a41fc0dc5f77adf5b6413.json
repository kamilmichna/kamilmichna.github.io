{"expireTime":9007200830448266000,"key":"transformer-remark-markdown-ast-ebbc8ed7933909d2dd668fb0dc21f617-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Matura 2019 - Ulubione cyfry","position":{"start":{"line":3,"column":3,"offset":4},"end":{"line":3,"column":31,"offset":32},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":31,"offset":32},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Cześć! Nowa seria polegać będzie na wspólnym rozwiązywaniu zadań z matury rozszerzonej z informatyki, do której właśnie się przygotowuję. Wykorzystywać będziemy język ","position":{"start":{"line":4,"column":1,"offset":33},"end":{"line":4,"column":168,"offset":200},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Python","position":{"start":{"line":4,"column":170,"offset":202},"end":{"line":4,"column":176,"offset":208},"indent":[]}}],"position":{"start":{"line":4,"column":168,"offset":200},"end":{"line":4,"column":178,"offset":210},"indent":[]}},{"type":"text","value":" - jako jeden z dostępnych obecnie. Zaczniemy od tegorocznej matury. Arkusze matury możesz znaleźć na stronie Centralnej Komisji Egzaminacyjnej:  ","position":{"start":{"line":4,"column":178,"offset":210},"end":{"line":4,"column":324,"offset":356},"indent":[]}},{"type":"link","title":null,"url":"https://cke.gov.pl/egzamin-maturalny/egzamin-w-nowej-formule/arkusze/2019-2/","children":[{"type":"text","value":"Link","position":{"start":{"line":4,"column":325,"offset":357},"end":{"line":4,"column":329,"offset":361},"indent":[]}}],"position":{"start":{"line":4,"column":324,"offset":356},"end":{"line":4,"column":408,"offset":440},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":4,"column":408,"offset":440},"end":{"line":4,"column":409,"offset":441},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":33},"end":{"line":4,"column":409,"offset":441},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Treść zadania:","position":{"start":{"line":5,"column":4,"offset":445},"end":{"line":5,"column":18,"offset":459},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":442},"end":{"line":5,"column":19,"offset":460},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">Małgosia i Jaś lubią liczby. Małgosia lubi liczby nieparzyste, a Jaś lubi liczby parzyste. Każde z dzieci zapisało po kilka spośród swoich ulubionych liczb na jednej wspólnej kartce. Najpierw Małgosia zapisała wszystkie swoje liczby, a potem Jaś dopisał swoje.</code>","position":{"start":{"line":6,"column":1,"offset":461},"end":{"line":8,"column":2,"offset":725},"indent":[1,1]}},{"type":"text","value":"\n\"Kartkę\" możemy przedstawić jako ","position":{"start":{"line":8,"column":2,"offset":725},"end":{"line":9,"column":34,"offset":759},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"tablicę dwuwymiarową","position":{"start":{"line":9,"column":36,"offset":761},"end":{"line":9,"column":56,"offset":781},"indent":[]}}],"position":{"start":{"line":9,"column":34,"offset":759},"end":{"line":9,"column":58,"offset":783},"indent":[]}},{"type":"text","value":" która zawiera najpierw bliżej nieokreśloną ilość liczb nieparzystych, a następnie - również nieokreśloną ilość liczb parzystych. Dla przykładu, zbiór liczb wypisanych przez Jasia i Małgosie może wyglądać w ten sposób: \n","position":{"start":{"line":9,"column":58,"offset":783},"end":{"line":10,"column":1,"offset":1003},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">{5, 99, 3, 7, 111, 13, 4, 24, 4, 8}</code>","position":{"start":{"line":10,"column":1,"offset":1003},"end":{"line":12,"column":2,"offset":1042},"indent":[1,1]}},{"type":"text","value":"\nOd lewej mamy zapisane liczby Małgosi - nieparzyste. Naszym celem jest znalezienie pierwszej liczby Jasia - czyli pierwszej liczby parzystej. W tym przypadku jest to ","position":{"start":{"line":12,"column":2,"offset":1042},"end":{"line":13,"column":167,"offset":1209},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"4","position":{"start":{"line":13,"column":169,"offset":1211},"end":{"line":13,"column":170,"offset":1212},"indent":[]}}],"position":{"start":{"line":13,"column":167,"offset":1209},"end":{"line":13,"column":172,"offset":1214},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":13,"column":172,"offset":1214},"end":{"line":13,"column":173,"offset":1215},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":461},"end":{"line":13,"column":173,"offset":1215},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Zadanie 1.1:","position":{"start":{"line":15,"column":4,"offset":1220},"end":{"line":15,"column":16,"offset":1232},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":1217},"end":{"line":15,"column":16,"offset":1232},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`\nNapisz algorytm (w postaci listy kroków, w pseudokodzie lub w wybranym języku programowania), który dla danego ciągu liczb zapisanych przez dzieci znajdzie pierwszą liczbę zapisaną przez Jasia. Zakładamy, że każde z dzieci zapisało co najmniej jedną liczbę. ","position":{"start":{"line":16,"column":1,"offset":1233},"end":{"line":17,"column":259,"offset":1493},"indent":[1]}}],"position":{"start":{"line":16,"column":1,"offset":1233},"end":{"line":17,"column":259,"offset":1493},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Przy ocenie będzie brana pod uwagę złożoność czasowa Twojego algorytmu. Maksymalną liczbę punktów uzyskasz za algorytm o złożoności lepszej niż liniowa. ","position":{"start":{"line":19,"column":1,"offset":1495},"end":{"line":19,"column":154,"offset":1648},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":1495},"end":{"line":19,"column":154,"offset":1648},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Uwaga: W zapisie algorytmu możesz wykorzystać tylko operacje arytmetyczne (dodawanie, odejmowanie, mnożenie, dzielenie, dzielenie całkowite, reszta z dzielenia), instrukcje porównania, instrukcje sterujące i przypisania do zmiennych lub samodzielnie napisane funkcje, wykorzystujące wyżej wymienione operacje.\n`\nO co chodzi? Ano mamy za zadanie napisać w ","position":{"start":{"line":21,"column":1,"offset":1650},"end":{"line":23,"column":44,"offset":2005},"indent":[1,1]}},{"type":"strong","children":[{"type":"text","value":"dowolnym języku programowania lub pseudokodzie","position":{"start":{"line":23,"column":46,"offset":2007},"end":{"line":23,"column":92,"offset":2053},"indent":[]}}],"position":{"start":{"line":23,"column":44,"offset":2005},"end":{"line":23,"column":94,"offset":2055},"indent":[]}},{"type":"text","value":" program który w ciągu liczb znajdzie nam pierwszą liczbę parzystą (napisaną przez Jasia). Jest to stosunkowo proste na pierwszy rzut oka, ale sprawa komplikuje się przy ","position":{"start":{"line":23,"column":94,"offset":2055},"end":{"line":23,"column":264,"offset":2225},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"złożoności obliczeniowej","position":{"start":{"line":23,"column":266,"offset":2227},"end":{"line":23,"column":290,"offset":2251},"indent":[]}}],"position":{"start":{"line":23,"column":264,"offset":2225},"end":{"line":23,"column":292,"offset":2253},"indent":[]}},{"type":"text","value":". Wykonajmy więc póki co zadanie w najprostszy sposób, taki po \"najmniejszej linii oporu\"  - najszybszy ale jednocześnie dający nam najmniejszą liczbę punktów.","position":{"start":{"line":23,"column":292,"offset":2253},"end":{"line":23,"column":451,"offset":2412},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1650},"end":{"line":23,"column":451,"offset":2412},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"W jaki sposób to zrobimy? Pewnie większość z Was gdyby bez względu na wspomnianą już ","position":{"start":{"line":25,"column":1,"offset":2414},"end":{"line":25,"column":86,"offset":2499},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"złożoność obliczeniową","position":{"start":{"line":25,"column":88,"offset":2501},"end":{"line":25,"column":110,"offset":2523},"indent":[]}}],"position":{"start":{"line":25,"column":86,"offset":2499},"end":{"line":25,"column":112,"offset":2525},"indent":[]}},{"type":"text","value":" miała napisać wymagany algorytm zrobiła by to w ten sposób. po prostu sprawdzamy naszą tablicę od lewej do prawej, i gdy tylko natrafimy na liczbę parzystą zatrzymujemy go i zwracamy wynik. Użyjemy do tego ","position":{"start":{"line":25,"column":112,"offset":2525},"end":{"line":25,"column":319,"offset":2732},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"pętli","position":{"start":{"line":25,"column":321,"offset":2734},"end":{"line":25,"column":326,"offset":2739},"indent":[]}}],"position":{"start":{"line":25,"column":319,"offset":2732},"end":{"line":25,"column":328,"offset":2741},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":2414},"end":{"line":25,"column":328,"offset":2741},"indent":[]}},{"type":"html","lang":"python","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># używam polskiej nazwy zmiennej jedynie dla lepszej czytelności kodu.</span>\nlista <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> liczba <span class=\"token keyword\">in</span> lista<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> liczba <span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Pierwsza liczba parzysta to: '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>liczba<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":26,"column":1,"offset":2742},"end":{"line":35,"column":4,"offset":2976},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Myślę że kod jest bardzo prosty - i co ważne czytelny. Moglibyśmy również zrobić z niego funkcję która odnajdzie pierwszą liczbę parzystą dla każdego zbioru liczb podanego jako argument. Do dzieła!","position":{"start":{"line":37,"column":1,"offset":2978},"end":{"line":37,"column":198,"offset":3175},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":2978},"end":{"line":37,"column":198,"offset":3175},"indent":[]}},{"type":"html","lang":"python","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># używam polskiej nazwy zmiennej jedynie dla lepszej czytelności kodu.</span>\nlista <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">pierwsza_parzysta</span><span class=\"token punctuation\">(</span>liczby<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">for</span> liczba <span class=\"token keyword\">in</span> liczby<span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">if</span> liczba<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> liczba\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Pierwsza parzysta liczba to: '</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>pierwsza_parzysta<span class=\"token punctuation\">(</span>lista<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":38,"column":1,"offset":3176},"end":{"line":48,"column":4,"offset":3466},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Program w obu powyższych przypadkach zwróci 4 - czyli działa. Kod jest czytelny, prosty, sukces, prawda? Ano nie. Rozwiązanie jest prawidłowe, ale dostalibyśmy za nie minimalną liczbę punktów. ","position":{"start":{"line":49,"column":1,"offset":3467},"end":{"line":49,"column":194,"offset":3660},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":3467},"end":{"line":49,"column":194,"offset":3660},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Dlaczego?","position":{"start":{"line":50,"column":4,"offset":3664},"end":{"line":50,"column":13,"offset":3673},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":3661},"end":{"line":50,"column":14,"offset":3674},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Problemem jest  wspomniana już wcześniej ","position":{"start":{"line":51,"column":1,"offset":3675},"end":{"line":51,"column":42,"offset":3716},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"złożoność obliczeniowa","position":{"start":{"line":51,"column":44,"offset":3718},"end":{"line":51,"column":66,"offset":3740},"indent":[]}}],"position":{"start":{"line":51,"column":42,"offset":3716},"end":{"line":51,"column":68,"offset":3742},"indent":[]}},{"type":"text","value":". O co chodzi? Ważnym problemem w informatyce jest opisanie szybkości danego programu. Jednak istnieje całe mnóstwo konfiguracji sprzętowych - zwyczajny pomiar czasu wykonania nie jest miarodajny. Dlatego używa się różnych sposobów na określenie szybkości działania algorytmu. W skrócie, nasz algorytm ma obecnie złożoność liniową. Dlaczego? Ano jeżeli narysowalibyśmy sobie wykres ilości przeprowadzonych operacji do ilości liczb to była by to linia prosta - im więcej liczb tym więcej razy musimy iterować przez tablicę. Lepszym rozwiązaniem jest zastosowanie algorytmu o złożoności logarytmicznej. Zapisany przeze mnie w pythonie algorytm wygląda w ten sposób: ","position":{"start":{"line":51,"column":68,"offset":3742},"end":{"line":51,"column":732,"offset":4406},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":3675},"end":{"line":51,"column":732,"offset":4406},"indent":[]}},{"type":"html","lang":"python","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">A <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n\tn <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> A<span class=\"token punctuation\">[</span>n<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>  <span class=\"token keyword\">and</span> A<span class=\"token punctuation\">[</span>n<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">[</span>n<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#Otrzymaliśmy wynik, wyświetlamy go</span>\n\t\t<span class=\"token keyword\">break</span>\n\t<span class=\"token keyword\">elif</span> A<span class=\"token punctuation\">[</span>n<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>  <span class=\"token keyword\">and</span> A<span class=\"token punctuation\">[</span>n<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n\t\tA <span class=\"token operator\">=</span> A<span class=\"token punctuation\">[</span>n<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token keyword\">elif</span> A<span class=\"token punctuation\">[</span>n<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>  <span class=\"token keyword\">and</span> A<span class=\"token punctuation\">[</span>n<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\tA <span class=\"token operator\">=</span> A<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>n<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":52,"column":1,"offset":4407},"end":{"line":64,"column":4,"offset":4694},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Co dzieje się w tym programie? Załóżmy że mamy tablicę: ","position":{"start":{"line":65,"column":1,"offset":4695},"end":{"line":65,"column":57,"offset":4751},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1,2,5,6,22,44,18</code>","position":{"start":{"line":65,"column":57,"offset":4751},"end":{"line":65,"column":75,"offset":4769},"indent":[]}},{"type":"text","value":". Program znajduje jej środek, czyli ","position":{"start":{"line":65,"column":75,"offset":4769},"end":{"line":65,"column":112,"offset":4806},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":65,"column":112,"offset":4806},"end":{"line":65,"column":115,"offset":4809},"indent":[]}},{"type":"text","value":". Następnie sprawdza wartość elementu wcześniejszego, czyli ","position":{"start":{"line":65,"column":115,"offset":4809},"end":{"line":65,"column":175,"offset":4869},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":65,"column":175,"offset":4869},"end":{"line":65,"column":178,"offset":4872},"indent":[]}},{"type":"text","value":". Jeżeli nasz  parzysty środek jest poprzedzony liczbą nieparzystą, oznacza to że znaleźliśmy poszukiwaną przez nas wartość. Sprawdźmy teraz działanie algorytmu na innym zbiorze danych, na przykład podanym wcześniej: ","position":{"start":{"line":65,"column":178,"offset":4872},"end":{"line":65,"column":395,"offset":5089},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">5, 99, 3, 7, 111, 13, 4, 24, 4, 8</code>","position":{"start":{"line":65,"column":395,"offset":5089},"end":{"line":65,"column":430,"offset":5124},"indent":[]}},{"type":"text","value":". Program środek tablicy znajduje wzorem ","position":{"start":{"line":65,"column":430,"offset":5124},"end":{"line":65,"column":471,"offset":5165},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">długość tablicy//2</code>","position":{"start":{"line":65,"column":471,"offset":5165},"end":{"line":65,"column":491,"offset":5185},"indent":[]}},{"type":"text","value":", czyli w naszym przypadku jest to indeks 5 - wartość ","position":{"start":{"line":65,"column":491,"offset":5185},"end":{"line":65,"column":545,"offset":5239},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">13</code>","position":{"start":{"line":65,"column":545,"offset":5239},"end":{"line":65,"column":549,"offset":5243},"indent":[]}},{"type":"text","value":". Program sprawdza element poprzedzający - ","position":{"start":{"line":65,"column":549,"offset":5243},"end":{"line":65,"column":592,"offset":5286},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">111</code>","position":{"start":{"line":65,"column":592,"offset":5286},"end":{"line":65,"column":597,"offset":5291},"indent":[]}},{"type":"text","value":". Instrukcja warunkowa nr 2 (środkowy elif) mówi mu, że w takim przypadku ma uciąć pierwszą połowę naszej tabeli - element szukany na pewno znajduje się bardziej na prawo! Następuje kolejna iteracja. Tym razem za środek zostaje przyjęty element o indeksie ","position":{"start":{"line":65,"column":597,"offset":5291},"end":{"line":65,"column":853,"offset":5547},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":65,"column":853,"offset":5547},"end":{"line":65,"column":856,"offset":5550},"indent":[]}},{"type":"text","value":", a A ma teraz elementy: ","position":{"start":{"line":65,"column":856,"offset":5550},"end":{"line":65,"column":881,"offset":5575},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">13, 4, 24, 4, 8</code>","position":{"start":{"line":65,"column":881,"offset":5575},"end":{"line":65,"column":898,"offset":5592},"indent":[]}},{"type":"text","value":". 24 jest podzielne przez 2, element poprzedzający - 4 - też. W tym wypadku odcinamy wszystko na prawo, razem z 24. Pozostaje nam ","position":{"start":{"line":65,"column":898,"offset":5592},"end":{"line":65,"column":1028,"offset":5722},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">[13,4]</code>","position":{"start":{"line":65,"column":1028,"offset":5722},"end":{"line":65,"column":1036,"offset":5730},"indent":[]}},{"type":"text","value":", z którego program zwraca wartość 4 dzięki pierwszej instrukcji warunkowej. I  voilà! Użyliśmy tutaj wariacji algorytmu ","position":{"start":{"line":65,"column":1036,"offset":5730},"end":{"line":65,"column":1157,"offset":5851},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">binary search</code>","position":{"start":{"line":65,"column":1157,"offset":5851},"end":{"line":65,"column":1172,"offset":5866},"indent":[]}},{"type":"text","value":", który według Wikipedii ma złożoność ","position":{"start":{"line":65,"column":1172,"offset":5866},"end":{"line":65,"column":1210,"offset":5904},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"O(log n)","position":{"start":{"line":65,"column":1212,"offset":5906},"end":{"line":65,"column":1220,"offset":5914},"indent":[]}}],"position":{"start":{"line":65,"column":1210,"offset":5904},"end":{"line":65,"column":1222,"offset":5916},"indent":[]}},{"type":"text","value":". Oznacza to że ","position":{"start":{"line":65,"column":1222,"offset":5916},"end":{"line":65,"column":1238,"offset":5932},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"w przypadku miliona elementów w tablicy program musiałby sprawdzić maksymalnie 20 elementów aby znaleźć pożądany, a nasz wcześniejszy algorytm - w najgorszym wypadku - aż milion!","position":{"start":{"line":65,"column":1240,"offset":5934},"end":{"line":65,"column":1418,"offset":6112},"indent":[]}}],"position":{"start":{"line":65,"column":1238,"offset":5932},"end":{"line":65,"column":1420,"offset":6114},"indent":[]}},{"type":"text","value":" To gigantyczna przepaść w złożoności, ważna zwłaszcza w dużych zbiorach danych. Następnie pozostało nam udzielić odpowiedzi - złożoność naszego algorytmu jest ","position":{"start":{"line":65,"column":1420,"offset":6114},"end":{"line":65,"column":1580,"offset":6274},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"logarytmiczna","position":{"start":{"line":65,"column":1582,"offset":6276},"end":{"line":65,"column":1595,"offset":6289},"indent":[]}}],"position":{"start":{"line":65,"column":1580,"offset":6274},"end":{"line":65,"column":1597,"offset":6291},"indent":[]}},{"type":"text","value":". Zadanie gotowe!","position":{"start":{"line":65,"column":1597,"offset":6291},"end":{"line":65,"column":1614,"offset":6308},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":4695},"end":{"line":65,"column":1614,"offset":6308},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Dzięki za uwagę, Kamil Michna ;)","position":{"start":{"line":66,"column":5,"offset":6313},"end":{"line":66,"column":37,"offset":6345},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":6309},"end":{"line":66,"column":37,"offset":6345},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":66,"column":37,"offset":6345}}}}