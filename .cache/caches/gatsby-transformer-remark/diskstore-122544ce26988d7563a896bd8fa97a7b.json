{"expireTime":9007200826686518000,"key":"transformer-remark-markdown-html-fca25945251452321b6105476d9243bb-gatsby-remark-prismjs-","val":"<h1>TypeScript #0 - typowanie statyczne w JavaScript.</h1>\n<p> TypeScript to, jak mówi Wikipedia: <strong>\"... wolny i otwartoźródłowy język programowania stworzony przez firmę Microsoft jako nadzbiór języka JavaScript. Umożliwia on opcjonalne statyczne typowanie oraz programowanie zorientowane obiektowo oparte na klasach.\"</strong> Co to oznacza w praktyce? Przekonajmy się!\n<img src=\"https://i1.wp.com/storage.googleapis.com/blog-images-backup/1*D8Wwwce8wS3auLAiM3BQKA.jpeg?resize=2000%2C1105&#x26;ssl=1\" alt=\"Znalezione obrazy dla zapytania typescript\"></p>\n<h2>Typowanie statyczne - po co mi to?</h2>\n<p>Dla wielu osób dużą zaletą <strong>JavaScript</strong> jest właśnie brak <strong>statycznego typowania</strong>. Często można spotkać się z opinią, że \"ogranicza\" ono programistę, i dla tego część osób unika języków z typowaniem statycznym takich jak <strong>Java</strong>, <strong>C++</strong> czy <strong>C#</strong> wybierając języki takie jak na przykład <strong>Python</strong> czy <strong>JavaScript</strong>. <strong>TypeScript</strong> to <strong>nadzbiór JavaScript</strong> oznacza to, że niczego on nie narzuca - i każdy kod napisany w <strong>JavaScript</strong> jest jednocześnie poprawnym kodem <strong>TypeScript</strong>, nie musimy więc martwić się o integracje z kodem <strong>JS</strong>, jak również <strong>nie musimy uczyć się od nowa - TypeScript to też JavaScript, tylko z dodatkowymi funkcjonalnościami</strong>. </p>\n<h2>Możliwości Typescript</h2>\n<ul>\n<li>Typowane zmienne, argumenty i funkcje</li>\n<li>Klasy</li>\n<li>Interfejsy</li>\n<li>Enum</li>\n<li>Moduły</li>\n<li>Opcjonalne parametry funkcji</li>\n</ul>\n<h2>Gdzie mogę użyć TypeScript?</h2>\n<p>Na oficjalnej stronie <strong>TypeScript</strong> widnieje sporo poradników jak rozpocząć przygodę ze <strong>statycznym typowaniem w JavaScript</strong> w różnych technologiach i językach. Znajdziemy poradniki dotyczące integracji <strong>Typescript w projekcie korzystającym z Reacta, Angulara, Express.js, Vue, .Net, oraz projektach z  czystym JS, na przykład przy użyciu Babel</strong>.</p>\n<h2>Jakie zalety ma TypeScript?</h2>\n<ul>\n<li><strong>Bezpieczniejszy kod</strong> - statyczne typowanie pozwala nam lepiej zarządzać danymi w naszej aplikacji, i czyni ją bardziej usystematyzowaną.</li>\n<li><strong>Syntax sugar</strong> - wiele nowych features jest dostępnych w <strong>TypeScript</strong></li>\n<li><strong>Bardzo dobre wsparcie w narzędziach do Microsoft</strong></li>\n</ul>\n<p>Mam nadzieję że powyższy post przekonał Cię do dania szansy <strong>statycznemu typowaniu w JS</strong>. Więcej postów na ten temat, wyjaśniających dokładniej jedne z najważniejszych funkcji <strong>TypeScripta</strong> już niebawem!</p>\n<h3>Dzięki za uwagę, Kamil Michna ;)</h3>"}