{"data":{"markdownRemark":{"html":"<h1>Rest Api w koa.js</h1>\n<p>Ostatnio zajmowaliśmy się pobieraniem danych z REST Api zewnętrznego serwera. Jak samemu stworzyć takie Api? Przekonamy się dzisiaj!</p>\n<h2>Jakie rodzaje zapytań wysępują w REST Api?</h2>\n<p>Tak naprawdę w naszym <strong>REST Api</strong> możemy wykorzystać wszyskie metody <strong>HTTP</strong>, jednak my zajmiemy się tymi najpopularniejszymi, oraz ich rolą. Do grupy 4 najczęściej używanych metod, które są niejako <strong>must have</strong> każdej aplikacji o dużym zasobie danych to:</p>\n<ul>\n<li>GET</li>\n<li>POST</li>\n<li>PUT</li>\n<li>DELETE</li>\n</ul>\n<h2>Metoda <strong>GET</strong>:</h2>\n<p>Służy ona do pobierania danych z serwera. Powinniśmy ich używać tylko do pobierania danych, i tylko takich, które nie są zbyt <code class=\"language-text\">tajne</code> - metoda get pewne parametry \"przymyca\" w url zapytania. Przykładowo, jeżli stworzylibyśmy formularz z loginem i hasłem (<strong>czego nie powinniśmy robić!</strong>) url wyglądałby dokładnie tak: <code class=\"language-text\">https:\\\\strona.com?login=naszfajnylogin%password=naszefajnehaslo</code>. Niezbyt bezpieczne, prawda? Dodatkowo zapytania <strong>get</strong> są przechowywane na przykład w historii przeglądarki. Jednym słowem, nie używaj ich nigdy do wysyłania danych, a jedynie do ich pobierania.</p>\n<h2>Metoda <strong>POST</strong>:</h2>\n<p>Metoda służąca do wysyłania danych. Nie jest zapisywana w historii przeglądarki, a w <strong>REST API</strong> wykorzystuje się ją do tworzenia nowych zasobów, na przykład stworzenia nowego użytkownika w bazie danych.</p>\n<h2>Metoda <strong>PUT</strong>:</h2>\n<p>Metoda bardzo podobna do metody <strong>POST</strong>, z tą różnicą że używana jest do <strong>aktualizacji danych</strong>, a nie ich tworzenia.</p>\n<h2>Metoda <strong>DELETE</strong>:</h2>\n<p>Podobna do dwóch poprzednich, służy jednak do usuwania danych.</p>\n<h1>Tworzymy REST Api w KOA</h1>\n<p>Na początku stwórzmy sobie nowy katalog, a w nim użyjmy dwóch znanym nam już komend: <code class=\"language-text\">npm init</code> oraz <code class=\"language-text\">npm i koa</code>, aby stworzyć plik <strong>package.json</strong> a następnie zainstalować <strong>koa</strong>. Stwórzmy także jeden plik - server.js w którym będą znajdować się cały nasz kod. Zainstalujmy także <strong>koa-router</strong>, ponieważ to on obsługuje wymienione wyżej metody. Zrobimy to za pomocą polecenia <code class=\"language-text\">npm i koa-router</code>.</p>\n<p>Wszystkie nasze metody zaimplementowane w <strong>koa</strong> wyglądają tak:\n<img src=\"../avatar.jpg\" alt=\"no hej gościu\"></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Koa <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Router <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-router'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">allowedMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">\"zapytanie GET\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">\"zapytanie POST\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/put'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">\"zapytanie PUT\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">\"zapytanie DELETE\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'server is working'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>działanie <strong>GET</strong> możemy sprawdzić wchodząc na adres naszego serwera, czyli <code class=\"language-text\">http://localhost:3000/</code>, a <strong>POST</strong> wysyłając tam metodą <strong>POST</strong> dane z formularza w <strong>HTML</strong>. Niestety, <strong>DELETE</strong> ani <strong>PUT</strong> nie są obsługiwane przez <strong>formularz HTML</strong>, więc ich działanie sprawdzimy z poziomu <strong>fetch Api</strong>, ale to już w przyszłym wpisie ;).</p>\n<h3>Dzięki za uwagę ;)</h3>","frontmatter":{"date":"March 24, 2019","path":"/2019/3/koa-api2","title":"Poradnik Koa #8.2 - własne podstawowe REST API w Koa.js"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}