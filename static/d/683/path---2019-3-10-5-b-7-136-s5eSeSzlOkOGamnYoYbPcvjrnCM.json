{"data":{"markdownRemark":{"html":"<h1>Podstawowe REST Api</h1>\n<p>Dzisiejszy tytuł jest nieco zwodniczy - co prawda nie będziemy korzystać z KOA, ale nauczymy się jak odpytać Api o dane, co przyda nam się w następnych postach.</p>\n<h2>Czym jest REST Api?</h2>\n<p>REST Api, to w dużym skrócie taki interfejs w napisanym przez nas oprogramowaniu, który pozwala pobierać innym aplikacjom kluczowe do ich działania dane.</p>\n<h2>Po co mi REST Api skoro umiem przekazywać dane do strony w Koa?</h2>\n<p>Przewagi REST Api nad powyższym rozwiązaniem są dwie - chociaż oba rozwiązania są dobre, REST Api pozwala nam po pierwsze pobierać dane bez potrzeby przeładowywania naszej strony, a po drugie na korzystanie z naszych danych przez wiele aplikacji. Może teraz wydaje się to dla Ciebie lekko abstrakcyjne - w końcu interesuje nas napisanie funkcjonalnego serwera w <strong>Koa</strong>, a nie <strong>kilku</strong> aplikacji, i to jeszcze zapewne w różnych językach, ale wyobraź sobie taki przykład: razem z zespołem programistów zakładacie startup - nowy, rewolucyjny portal społecznościowy. Odpowiadasz w nim właśnie za <strong>backend</strong>, czyli serwer w <strong>koa</strong> oraz bazę danych zawierającą na przykład informacje o użytkownikach - ich imiona, nazwiska, maile, wpisy. Sposób który już znamy - przekazywanie informacji do pliku przy renderowaniu sprawdził by się - serwer pobierze dane o użytkowniku, a następnie wyrenderuje template strony uzupełniając go odpowiednimi informacjami. Problem zaczyna się jednak, gdy oprócz aplikacji webowej, osoby w twoim zespole piszą także aplikacje na przykład na <strong>Androida w języku JAVA, aplikację na Ios w języku Swift, oraz aplikację natywną na system Windows w języku C#</strong>. W jaki sposób mają oni uzyskać dane? Właśnie przez REST Api, które <strong>Ty</strong> stworzysz.</p>","frontmatter":{"date":"March 10, 2019","path":"/2019/3/10","title":"Poradnik Koa #8.1 - podstawowe REST Api"}}},"pageContext":{}}