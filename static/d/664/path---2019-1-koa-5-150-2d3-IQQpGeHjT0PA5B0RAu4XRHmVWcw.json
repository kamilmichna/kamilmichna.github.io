{"data":{"markdownRemark":{"html":"<h1>Template engines w Koa.js</h1>\n<h2>Czym są template engines?</h2>\n<p>Na to pytanie odpowiedziałem dokładniej w tym poście: <a href=\"https://koajs.com/\">Link</a>. W skrócie przypomnę jednak że tak zwane <strong>template engines</strong> to w dużym uproszczeniu często bardzo podobne składnią do <strong>języka html</strong> \"foremki\" które pozwalają w bardzo prosty sposób dostosować treść na naszej stronie do tego, co na przykład pobiera z bazy danych nasz serwer. Nie dzieje się to co prawda dynamicznie, jak przy użyciu <strong>technologii AJAX</strong> i pobieraniu danych na przykład z Api wystawianego przez nas serwer (czym również niebawem się zajmiemy). Dane z serwera wpływ na treść naszej strony mają tylko raz, przy jej wyrenderowaniu - czyli na przykład dane na stronie mogą zmienić się po odświeżeniu okna przeglądarki, ale nie stanie się to dynamicznie.</p>\n<h2>Zalety template engines</h2>\n<p>Przede wszystkim jest to najprostszy sposób na dostosowanie <strong>treści strony</strong> do danych z serwera. Dzisiaj stworzymy sobie bardzo prosty przykład i przekażemy naszej stronie <strong>odrobinę tekstu oraz aktualną datę.</strong></p>\n<h1>Do dzieła!</h1>\n<h2>Wybór i instalacja template engine</h2>\n<p>Podobnie jak w przypadku starszego brata Koa.js czyli <strong>Express.js</strong> do wyboru mamy ich całkiem sporo. Wymieniłem już wcześniej kilka z najpopularniejszych w poście w których omówiłem czym dokładnie są <strong>template engines</strong>. Większość z nich oferuje bardzo podobną funkcjonalność i wybór odpowiedniego dla nas sprowadza się głównie do własnych preferencji, lub tego który silnik jest aktualnie używany w projekcie do którego chcemy dołączyć.</p>\n<h2>Na początku zainstalujmy niezbędny pakiet.</h2>\n<p>Nasz <strong>template rendering</strong> zaimplementujemy do przykładu który stworzyliśmy w poprzednim poście: <a href=\"https://kamilmichna.github.io/2019/1/koa4\">Link</a>. Musimy doinstalować tam dwie niezbędne paczki. Pierwszą z nich będzie <strong>koa_views</strong>, która pozwala nam na implementację <strong>template_renderingu</strong>, a drugą będzie już paczka adekwatna do języka w którym będziemy pisać nasze szablony, ja wybrałem <strong>pug</strong>.\nZainstalujmy więc paczkę <strong>koa_views</strong>: </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install koa-views --save</code></pre></div>\n<p>A teraz paczkę <strong>pug</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","frontmatter":{"date":"January 28, 2019","path":"/2019/1/koa5","title":"Poradnik Koa #5 - template engines"}}},"pageContext":{}}