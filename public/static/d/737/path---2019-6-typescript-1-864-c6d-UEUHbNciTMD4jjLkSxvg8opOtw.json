{"data":{"markdownRemark":{"html":"<h1>Typescript #1 - typowanie statyczne zmiennych</h1>\n<p> Jedną z głównych zalet, o którą de facto oparty jest cały <strong>TypeScript</strong> jest typowanie statyczne. Zapewne część z was spotkała się z nim w innych językach programowania, jednak warto przyjrzeć mu się bliżej. Istnieje kilka typów zmiennych. Jak je zadeklarować? Odpowiem na to pytanie poniżej!</p>\n<h2>Boolean</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> booleanVariable<span class=\"token punctuation\">:</span> bool<span class=\"token punctuation\">;</span>\nbooleanVariable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//OK</span>\nbooleanVariable <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//OK</span>\nbooleanVariable <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Error</span></code></pre></div>\n<p>Co tutaj się dziej? Za pomocą  : typ_zmiennej` określamy że dana zmienna może mieć wartość tylko danego typu, w tym przypadku <strong>true</strong> lub <strong>false</strong>. Próba przypisania na przykład <strong>stringa</strong> zwróci błąd. I to w zasadzie główne założenie <strong>TypeScripta</strong> i coś co stanowi jego podstawę. Jakie typy danych jeszcze istnieją? Sprawdźmy!</p>\n<h2>Number</h2>\n<p>Typ number działa identycznie jak w <strong>JavaScript</strong> - są to wszystkie liczby typu <strong>float</strong>. Zdefiniowanie go jest dziecinnie proste:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> numberVariable<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\nnumberVariable <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//OK</span>\nnumberVariable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Error</span>\nnumberVariable <span class=\"token operator\">=</span> <span class=\"token string\">\"100\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Error</span></code></pre></div>\n<h2>String</h2>\n<p>Działa identycznie jak string w <strong>JavaScript</strong>. Jest to ciąg znaków ograniczony znakiem <code class=\"language-text\">&#39;</code> lub <code class=\"language-text\">&quot;</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> stringVariable<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\nstringVariable <span class=\"token operator\">=</span> \"hello<span class=\"token punctuation\">;</span> <span class=\"token comment\">//OK</span>\nstringVariable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Error</span>\nstringVariable <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Error</span></code></pre></div>\n<p>Dozwolone są także tzw. <strong>template stringi</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">\tstringVariable <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`wynik dodawania to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//OK</span></code></pre></div>\n<h2>Tablice</h2>\n<p><strong>TypeScript</strong> pozwala nam także na pracę z tablicami. Najpierw podobnie jak wcześniej definiujemy rodzaj danych w tablicy, a następnie dodajemy <strong>[]</strong>. Przykłady:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> arrayOfNumbers<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narrayOfNumbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// OK</span>\narrayOfNumbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"jeden\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"dwa\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"trzy\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// Error</span>\n\n<span class=\"token keyword\">let</span> arrayOfStrings<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narrayofStrings <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"jeden\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"dwa\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"trzy\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">//OK</span>\narrayOfStrings <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// Error</span></code></pre></div>\n<p>Możemy także użyć tzw <strong>generic array type</strong>, w następujący sposób:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> arrayOfNumbers<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\narrayOfNumbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// OK</span>\narrayOfNumbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"jeden\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"dwa\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"trzy\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// Error</span></code></pre></div>\n<h2>Tuple (krotka)</h2>\n<p>Tuple to uporządkowany ciąg danych, przypomina tablicę o stałej, określonej długości. Jak ją zdefiniować w <strong>TypeScript?</strong> to proste!</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> tuple<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>number<span class=\"token punctuation\">,</span> string<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\ntuple <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// OK</span>\ntuple <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// Error</span></code></pre></div>\n<h2>Any</h2>\n<p>Typ any oznacza że do danej zmiennej może zostać przypisana wartość dowolnego typu.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> anyVariable<span class=\"token punctuation\">:</span> any<span class=\"token punctuation\">;</span>\nanyVariable <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// OK</span>\nanyVariable <span class=\"token operator\">=</span> <span class=\"token string\">\"12345\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// OK</span>\nanyVariable <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// OK</span></code></pre></div>\n<p>Mam nadzieję że powyższy post przybliżył Ci typy zmiennych w <strong>TypeScript</strong>! Po więcej wiedzy zajżyj\n<a href=\"https://www.typescriptlang.org/docs/handbook/basic-types.html\">do dokumentacji</a></p>\n<h3>Dzięki za uwagę, Kamil Michna ;)</h3>","frontmatter":{"date":"June 24, 2019","path":"/2019/6/typescript-1","title":"Typescript #1 - typowanie statyczne zmiennych"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}